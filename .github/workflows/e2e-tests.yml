name: E2E Tests

env:
  VIRUS_NAME: War

on:
  push:
  workflow_dispatch:

jobs:
  prepare-env:
    name: Build and push environment
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: onorahubleur/ubuntu

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./.github/images/
          file: ./.github/images/ubuntu.Dockerfile
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            onorahubleur/ubuntu:latest

  build:
    name: Build executable
    runs-on: ubuntu-24.04
    needs: prepare-env

    container:
      image: onorahubleur/ubuntu:latest
      options: --cap-add=SYS_PTRACE --privileged

    steps:
    - uses: actions/checkout@v2

    - name: Build virus
      run: make ${{ env.VIRUS_NAME }}

    - name: Upload virus
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.VIRUS_NAME }}
        path: ./${{ env.VIRUS_NAME }}

    - name: Upload remove_anti_debug
      uses: actions/upload-artifact@v4
      with:
        name: remove_anti_debug.py
        path: ./tools/remove_anti_debug.py

  no_folder_test:
    name: Test without test folders
    runs-on: ubuntu-24.04
    needs: build

    container:
      image: onorahubleur/ubuntu:latest
      options: --cap-add=SYS_PTRACE --privileged

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ env.VIRUS_NAME }}
        path: .

    - name: Make virus executable
      run: chmod +x ./${{ env.VIRUS_NAME }}
    
    - name: Test without test folders
      run: ./${{ env.VIRUS_NAME }}

  empty_folder_test:
    name: Test with empty test folders
    runs-on: ubuntu-24.04
    needs: build

    container:
      image: onorahubleur/ubuntu:latest
      options: --cap-add=SYS_PTRACE --privileged

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ env.VIRUS_NAME }}
        path: .

    - name: Make virus executable
      run: chmod +x ./${{ env.VIRUS_NAME }}

    - name: Test with empty test folders
      run: mkdir -p /tmp/test && mkdir -p /tmp/test2 && ./${{ env.VIRUS_NAME }}

  no_permission_test:
    name: Test without permission on target file
    runs-on: ubuntu-24.04
    needs: build

    container:
      image: onorahubleur/ubuntu:latest
      options: --cap-add=SYS_PTRACE --privileged

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ env.VIRUS_NAME }}

    - name: Make virus executable
      run: chmod +x ./${{ env.VIRUS_NAME }}

    - name: Prepare test
      run: mkdir -p /tmp/test && touch /tmp/test/echo && chmod 000 /tmp/test/echo

    - name: Infect file
      run: ./${{ env.VIRUS_NAME }}

  non_executable_infection_test:
    name: Test non-executable file infection
    runs-on: ubuntu-24.04
    needs: build

    container:
      image: onorahubleur/ubuntu:latest
      options: --cap-add=SYS_PTRACE --privileged

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ env.VIRUS_NAME }}

    - name: Make virus executable
      run: chmod +x ./${{ env.VIRUS_NAME }}

    - name: Prepare test
      run: mkdir -p /tmp/test && echo "Hello, world!" > /tmp/test/echo

    - name: Infect file
      run: ./${{ env.VIRUS_NAME }}

    - name: Upload infected file
      uses: actions/upload-artifact@v4
      with:
        name: non_executable_infection_test-echo.txt
        path: /tmp/test/echo

    - name: Test infected file did not change
      run: echo "Hello, world!" > /tmp/test/echo_expected && diff /tmp/test/echo /tmp/test/echo_expected

  self_infection_test:
    name: Test self-infection
    runs-on: ubuntu-24.04
    needs: build

    container:
      image: onorahubleur/ubuntu:latest
      options: --cap-add=SYS_PTRACE --privileged

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ env.VIRUS_NAME }}

    - name: Make virus executable
      run: chmod +x ./${{ env.VIRUS_NAME }}

    - name: Prepare test
      run: mkdir -p /tmp/test && cp ./${{ env.VIRUS_NAME }} /tmp/test/${{ env.VIRUS_NAME }}

    - name: Infect virus
      run: ./${{ env.VIRUS_NAME }}

  basic_echo_test:
    name: Test basic infection of echo
    runs-on: ubuntu-24.04
    needs: build

    container:
      image: onorahubleur/ubuntu:latest
      options: --cap-add=SYS_PTRACE --privileged

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ env.VIRUS_NAME }}

    - name: Make virus executable
      run: chmod +x ./${{ env.VIRUS_NAME }}

    - name: Prepare test
      run: mkdir -p /tmp/test && cp /bin/echo /tmp/test/echo

    - name: Infect echo
      run: ./${{ env.VIRUS_NAME }}

    - name: Output echo strings
      run: strings /tmp/test/echo > echo_strings

    - name: Upload echo strings
      uses: actions/upload-artifact@v4
      with:
        name: basic_echo_test-echo_strings.txt
        path: ./echo_strings

    - name: Test echo strings has signature
      run: cat echo_strings | grep "${{ env.VIRUS_NAME }}"

    - name: Run infected echo
      run: /tmp/test/echo "Hello, world!" > echo_output 

    - name: Upload echo output
      uses: actions/upload-artifact@v4
      with:
        name: basic_echo_test-echo_output.txt
        path: ./echo_output

    - name: Check infected echo output
      run: echo "Hello, world!" > echo_expected && diff echo_output echo_expected

  basic_ls_test:
    name: Test basic infection of ls
    runs-on: ubuntu-24.04
    needs: build

    container:
      image: onorahubleur/ubuntu:latest
      options: --cap-add=SYS_PTRACE --privileged

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ env.VIRUS_NAME }}

    - name: Make virus executable
      run: chmod +x ./${{ env.VIRUS_NAME }}

    - name: Prepare test
      run: mkdir -p /tmp/test && cp /bin/ls /tmp/test/ls

    - name: Infect ls
      run: ./${{ env.VIRUS_NAME }}

    - name: Output ls strings
      run: strings /tmp/test/ls > ls_strings

    - name: Upload ls strings
      uses: actions/upload-artifact@v4
      with:
        name: basic_ls_test-ls_strings.txt
        path: ./ls_strings

    - name: Test ls strings has signature
      run: cat ls_strings | grep "${{ env.VIRUS_NAME }}"

    - name: Run infected ls
      run: /tmp/test/ls /tmp/test -al > ls_output 

    - name: Upload ls output
      uses: actions/upload-artifact@v4
      with:
        name: basic_ls_test-ls_output.txt
        path: ./ls_output

    - name: Check infected ls output
      run: ls /tmp/test -al > ls_expected && diff ls_output ls_expected

  echo_ls_test:
    name: Test infected echo can infect ls
    runs-on: ubuntu-24.04
    needs: build

    container:
      image: onorahubleur/ubuntu:latest
      options: --cap-add=SYS_PTRACE --privileged

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ env.VIRUS_NAME }}

    - name: Make virus executable
      run: chmod +x ./${{ env.VIRUS_NAME }}

    - name: Prepare test
      run: mkdir -p /tmp/test && cp /bin/echo /tmp/test/echo

    - name: Infect echo
      run: ./${{ env.VIRUS_NAME }}

    - name: Copy ls into test folder
      run: mkdir -p /tmp/test2 && cp /bin/ls /tmp/test2/ls

    - name: Infect ls
      run: /tmp/test/echo "Hello, world!"

    - name: Output ls strings
      run: strings /tmp/test2/ls > ls_strings

    - name: Upload ls strings
      uses: actions/upload-artifact@v4
      with:
        name: echo_ls_test-ls_strings.txt
        path: ./ls_strings

    - name: Test ls strings has signature
      run: cat ls_strings | grep "${{ env.VIRUS_NAME }}"

    - name: Run infected ls
      run: /tmp/test2/ls /tmp/test -al > ls_output 

    - name: Upload ls output
      uses: actions/upload-artifact@v4
      with:
        name: echo_ls_test-ls_output.txt
        path: ./ls_output

    - name: Check infected ls output
      run: ls /tmp/test -al > ls_expected && diff ls_output ls_expected

  long_infection_chain_test:
    name: Test 5 infections chain
    runs-on: ubuntu-24.04
    needs: build

    container:
      image: onorahubleur/ubuntu:latest
      options: --cap-add=SYS_PTRACE --privileged

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ env.VIRUS_NAME }}

    - name: Make virus executable
      run: chmod +x ./${{ env.VIRUS_NAME }}

    - name: Prepare test
      run: mkdir -p /tmp/test && cp /bin/echo /tmp/test/echo

    - name: Infect echo
      run: ./${{ env.VIRUS_NAME }}

    - name: Copy ls into test folder
      run: mkdir -p /tmp/test2 && cp /bin/ls /tmp/test2/ls

    - name: Infect ls
      run: /tmp/test/echo "Hello, world!"

    - name: Copy whoami into test folder
      run: cp /bin/whoami /tmp/test/whoami

    - name: Infect whoami
      run: /tmp/test2/ls

    - name: Copy pwd into test folder
      run: cp /bin/pwd /tmp/test2/pwd

    - name: Infect pwd
      run: /tmp/test/whoami

    - name: Copy id into test folder
      run: cp /bin/id /tmp/test2/id

    - name: Infect id
      run: /tmp/test/whoami

    - name: Output id strings
      run: strings /tmp/test2/id > id_strings

    - name: Upload id strings
      uses: actions/upload-artifact@v4
      with:
        name: long_infection_chain_test-id_strings.txt
        path: ./id_strings

    - name: Test id strings has signature
      run: cat id_strings | grep "${{ env.VIRUS_NAME }}"

    - name: Run infected id
      run: /tmp/test2/id > id_output 

    - name: Upload id output
      uses: actions/upload-artifact@v4
      with:
        name: long_infection_chain_test-id_output.txt
        path: ./id_output

    - name: Check infected id output
      run: id > id_expected && diff id_output id_expected

  process_test:
    name: Test infection does not affect if cat is running
    runs-on: ubuntu-24.04
    needs: build

    container:
      image: onorahubleur/ubuntu:latest
      options: --cap-add=SYS_PTRACE --privileged

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ env.VIRUS_NAME }}
        path: .

    - name: Make virus executable
      run: chmod +x ./${{ env.VIRUS_NAME }}

    - name: Prepare test
      run: mkdir -p /tmp/test && cp /bin/echo /tmp/test/echo

    - name: Run infected echo
      run: bash -c 'cat <(./${{ env.VIRUS_NAME }}) > ${{ env.VIRUS_NAME }}_output'

    - name: Upload virus output
      uses: actions/upload-artifact@v4
      with:
        name: process_test-${{ env.VIRUS_NAME }}_output.txt
        path: ./${{ env.VIRUS_NAME }}_output

    - name: Check virus output
      run: cat ${{ env.VIRUS_NAME }}_output | grep "Process detected ;)"

    - name: Check echo is not infected
      run: strings /tmp/test/echo | grep "${{ env.VIRUS_NAME }}" && exit 1 || exit 0

  echo_ls_process_test:
    name: Test infected ls by infected echo does not affect if cat is running
    runs-on: ubuntu-24.04
    needs: build

    container:
      image: onorahubleur/ubuntu:latest
      options: --cap-add=SYS_PTRACE --privileged

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ env.VIRUS_NAME }}

    - name: Make virus executable
      run: chmod +x ./${{ env.VIRUS_NAME }}

    - name: Prepare test
      run: mkdir -p /tmp/test && cp /bin/echo /tmp/test/echo

    - name: Infect echo
      run: ./${{ env.VIRUS_NAME }}

    - name: Copy ls into test folder
      run: mkdir -p /tmp/test2 && cp /bin/ls /tmp/test2/ls

    - name: Infect ls
      run: /tmp/test/echo "Hello, world!"

    - name: Copy pwd into test folder
      run: cp /bin/pwd /tmp/test2/pwd

    - name: Run infected ls
      run: bash -c 'cat <(/tmp/test2/ls) > ls_output'

    - name: Upload virus output
      uses: actions/upload-artifact@v4
      with:
        name: echo_ls_process_test-ls_output.txt
        path: ./ls_output

    - name: Check virus output
      run: cat ls_output | grep "Process detected ;)"

    - name: Check pwd is not infected
      run: strings /tmp/test2/pwd | grep "${{ env.VIRUS_NAME }}" && exit 1 || exit 0

  debugger_test:
    name: Test infection does not affect if debugger is running
    runs-on: ubuntu-24.04
    needs: build

    container:
      image: onorahubleur/ubuntu:latest
      options: --cap-add=SYS_PTRACE --privileged

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ env.VIRUS_NAME }}
    
    - name: Make virus executable
      run: chmod +x ./${{ env.VIRUS_NAME }}

    - name: Prepare test
      run: mkdir -p /tmp/test && cp /bin/echo /tmp/test/echo

    - name: Run infected echo
      run: gdb -ex run -ex quit --args ./${{ env.VIRUS_NAME }} > ${{ env.VIRUS_NAME }}_output

    - name: Upload virus output
      uses: actions/upload-artifact@v4
      with:
        name: debugger_test-${{ env.VIRUS_NAME }}_output.txt
        path: ./${{ env.VIRUS_NAME }}_output
    
    - name: Check ${{ env.VIRUS_NAME }} output
      run: cat ${{ env.VIRUS_NAME }}_output | grep "DEBUG DETECTED ;)"

    - name: Check echo is not infected
      run: strings /tmp/test/echo | grep "${{ env.VIRUS_NAME }}" && exit 1 || exit 0

  echo_ls_debugger_test:
    name: Test infected ls by infected echo does not affect if debugger is running
    runs-on: ubuntu-24.04
    needs: build

    container:
      image: onorahubleur/ubuntu:latest
      options: --cap-add=SYS_PTRACE --privileged

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ env.VIRUS_NAME }}

    - name: Make virus executable
      run: chmod +x ./${{ env.VIRUS_NAME }}

    - name: Prepare test
      run: mkdir -p /tmp/test && cp /bin/echo /tmp/test/echo

    - name: Infect echo
      run: ./${{ env.VIRUS_NAME }}

    - name: Copy ls into test folder
      run: mkdir -p /tmp/test2 && cp /bin/ls /tmp/test2/ls

    - name: Infect ls
      run: /tmp/test/echo "Hello, world!"

    - name: Copy id into test folder
      run: cp /bin/id /tmp/test2/id

    - name: Run infected ls
      run: gdb -ex run -ex quit --args /tmp/test2/ls > ls_output

    - name: Upload virus output
      uses: actions/upload-artifact@v4
      with:
        name: echo_ls_debugger_test-ls_output.txt
        path: ./ls_output
    
    - name: Check ls output
      run: cat ls_output | grep "DEBUG DETECTED ;)"

    - name: Check id is not infected
      run: strings /tmp/test2/id | grep "${{ env.VIRUS_NAME }}" && exit 1 || exit 0

  backdoor_test:
    name: Test backdoor
    runs-on: ubuntu-24.04
    needs: build

    container:
      image: onorahubleur/ubuntu:latest
      options: --cap-add=SYS_PTRACE --privileged

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ env.VIRUS_NAME }}

    - name: Make virus executable
      run: chmod +x ./${{ env.VIRUS_NAME }}

    - name: Prepare test
      run: mkdir -p /tmp/test && cp /bin/ls /tmp/test/ls

    - name: Infect ls
      run: ./${{ env.VIRUS_NAME }}

    - name: Kill bakcdoor if running
      run: pkill -9 ncat || true

    - name: Connect to ls backdoor
      run: |
        /tmp/test/ls > /dev/null
        echo id | ncat localhost 4242 --no-shutdown > backdoor_output &
        sleep 1
        pkill -9 ncat

    - name: Upload backdoor output
      uses: actions/upload-artifact@v4
      with:
        name: backdoor_test-backdoor_output.txt
        path: ./backdoor_output

    - name: Check backdoor output
      run: id > backdoor_output_expected && diff backdoor_output backdoor_output_expected

  intrication_test:
    name: Test intrication of anti-debug and decipher
    runs-on: ubuntu-24.04
    needs: build

    container:
      image: onorahubleur/ubuntu:latest
      options: --cap-add=SYS_PTRACE --privileged

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ env.VIRUS_NAME }}

    - name: Make virus executable
      run: chmod +x ./${{ env.VIRUS_NAME }}

    - uses: actions/download-artifact@v4
      with:
        name: remove_anti_debug.py

    - name: Prepare test
      run: mkdir -p /tmp/test && cp /bin/ls /tmp/test/ls

    - name: Infect ls
      run: ./${{ env.VIRUS_NAME }}

    - name: Run remove_anti_debug
      run: python3 remove_anti_debug.py /tmp/test/ls

    - name: Execute ls
      run: /tmp/test/ls && exit 1 || exit 0
